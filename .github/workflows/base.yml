name: Build

on:
  workflow_call:
    secrets:
      CLOUDSMITH_CICD_USER:
        required: false
      CLOUDSMITH_CICD_TOKEN:
        required: false
    inputs:
      test:
        required: true
        type: string

      runtime:
        required: true
        type: string

      registry:
        description: "The Docker registry to use"
        type: string
        required: false

      image:
        description: "The Docker image to use"
        type: string
        required: false

      tag:
        description: "The Docker image tag to use"
        type: string
        required: false

jobs:
  load_configuration:
    uses: ./.github/workflows/load-configuration.yml
    with:
      runtime: ${{ inputs.runtime }}
      registry: ${{ inputs.registry }}
      image: ${{ inputs.image }}
      tag: ${{ inputs.tag }}

  test:
    needs: load_configuration
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        framework: [ net9.0 ]
        os: [ ubuntu-latest ]
        configuration: [ release ]
    runs-on: ${{ matrix.os }}
    name: ${{ inputs.test }} (${{ matrix.os }}, ${{ matrix.framework }})
    env:
      CLOUDSMITH_CICD_USER: ${{ secrets.CLOUDSMITH_CICD_USER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Print Docker Version
        shell: bash
        run: |
          docker --version

      - name: Login to Cloudsmith
        uses: docker/login-action@v3
        with:
          registry: ${{ needs.load_configuration.outputs.registry }}
          username: ${{ secrets.CLOUDSMITH_CICD_USER }}
          password: ${{ secrets.CLOUDSMITH_CICD_TOKEN }}

      - name: Install dotnet SDKs
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Run Tests
        shell: bash
        env:
          ES_DOCKER_IMAGE: "${{ needs.load_configuration.outputs.registry }}/${{ needs.load_configuration.outputs.image }}:${{ needs.load_configuration.outputs.tag }}"
        run: |
          sudo ./gencert.sh
          dotnet test --configuration ${{ matrix.configuration }} --blame \
            --logger:"GitHubActions;report-warnings=false" --logger:"console;verbosity=normal" \
            --framework ${{ matrix.framework }} \
            --filter "Category=Target:${{ inputs.test }}" \
            test/KurrentDB.Client.Tests
