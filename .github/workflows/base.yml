name: Build

on:
  workflow_call:
    inputs:
      kurrentdb-tag:
        description: The docker tag to use. If kurrentdb-image is empty, the action will use the values in the KURRENTDB_DOCKER_IMAGES variable (ci, lts, previous-lts).
        required: true
        type: string
      kurrentdb-image:
        description: The docker image to use. Leave this empty to use the image in the KURRENTDB_DOCKER_IMAGES variable.
        required: false
        type: string
      kurrentdb-registry:
        description: The docker registry to use. Leave this empty to use the registry in the KURRENTDB_DOCKER_IMAGES variable.
        required: false
        type: string
      test:
        description: Which test to run.
        required: true
        type: string
env:
  KURRENTDB_TAG: ${{ inputs.kurrentdb-image != '' && inputs.kurrentdb-tag || fromJSON(vars.KURRENTDB_DOCKER_IMAGES)[inputs.kurrentdb-tag].tag }}
  KURRENTDB_IMAGE: ${{ inputs.kurrentdb-image || fromJSON(vars.KURRENTDB_DOCKER_IMAGES)[inputs.kurrentdb-tag].image }}
  KURRENTDB_REGISTRY: ${{ inputs.kurrentdb-registry || fromJSON(vars.KURRENTDB_DOCKER_IMAGES)[inputs.kurrentdb-tag].registry }}
jobs:
  test:
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        framework: [ net8.0, net9.0 ]
        os: [ ubuntu-latest ]
        configuration: [ release ]
    runs-on: ${{ matrix.os }}
    name: ${{ inputs.test }} (${{ matrix.os }}, ${{ matrix.framework }})
    steps:
    - name: Echo docker details
      shell: bash
      run: |
        echo "${{env.KURRENTDB_REGISTRY}}"
        echo "${{env.KURRENTDB_IMAGE}}"
        echo "${{env.KURRENTDB_TAG}}"

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Login to Cloudsmith via docker.cloudsmith.io
      uses: docker/login-action@v3
      with:
        registry: docker.cloudsmith.io
        username: ${{ secrets.CLOUDSMITH_CICD_USER }}
        password: ${{ secrets.CLOUDSMITH_CICD_TOKEN }}

    - name: Login to Cloudsmith via docker.kurrent.io
      uses: docker/login-action@v3
      with:
        registry: docker.kurrent.io
        username: ${{ secrets.CLOUDSMITH_CICD_USER }}
        password: ${{ secrets.CLOUDSMITH_CICD_TOKEN }}

    - name: Login to Cloudsmith via docker.eventstore.com
      uses: docker/login-action@v3
      with:
        registry: docker.eventstore.com
        username: ${{ secrets.CLOUDSMITH_CICD_USER }}
        password: ${{ secrets.CLOUDSMITH_CICD_TOKEN }}

    - name: Pull KurrentDB Image
      shell: bash
      run: |
        docker pull ${{ env.KURRENTDB_REGISTRY }}/${{ env.KURRENTDB_IMAGE}}:${{ env.KURRENTDB_TAG}}

    - name: Install dotnet SDKs
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Generate certificates
      shell: bash
      run: sudo ./gencert.sh

    - name: Restore dependencies
      shell: bash
      run: dotnet restore

    - name: Run Tests
      shell: bash
      env:
        ES_DOCKER_TAG: ${{env.KURRENTDB_TAG}}
        ES_DOCKER_REGISTRY: ${{env.KURRENTDB_REGISTRY}}/${{env.KURRENTDB_IMAGE}}
        KURRENTDB_LICENSE_KEY: ${{ secrets.KURRENTDB_TEST_LICENSE_KEY }}
      run: |
        dotnet test --configuration ${{ matrix.configuration }} --blame \
          --logger:"GitHubActions;report-warnings=false" --logger:"console;verbosity=normal" \
          --framework ${{ matrix.framework }} \
          --filter "Category=Target:${{ inputs.test }}" \
          test/KurrentDB.Client.Tests